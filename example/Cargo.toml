[package]
name = "train"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "xor"
path = "src/xor/main.rs"

[[bin]]
name = "mnist"
path = "src/mnist/main.rs"

[dependencies]
csv = "1.3.0"
library = { path = "../library" }

# For releases try to max optimizations of the produced binary:
[profile.release]
#Higher optimization levels may produce faster runtime code at the expense of longer compiler times
opt-level = 3
#Link-Time Optimization (LTO) - “fat” LTO which attempts to perform optimizations across all crates within the dependency graph
lto = "fat"
#Incremental compilation causes rustc to save additional information to disk which will be reused when recompiling the crate, improving re-compile times.
incremental = false
#Speed up compile times tries to split your crates into small chunks and compile as many in parallel as possible and might cause it to miss some potential optimizations
codegen-units = 16
#Controls the amount of debug information included in the compiled binary
debug = false
#Strip debug info and symbols from the compiled binary
strip = "symbols"

# For releases also try to max optimizations for dependencies:
[profile.release.build-override]
opt-level = 3
[profile.release.package."*"]
opt-level = 3

# For dev builds try to max debuggability and compile speed of the produced binary:
[profile.dev]
opt-level = 0
lto = 'off'
incremental = true
codegen-units = 256
debug = true
strip = "none"
